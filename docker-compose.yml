version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ${USE_GPU:-Dockerfile}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - tmpfs_data:/tmp
    environment:
      - PYTHONUNBUFFERED=1
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - WANDB_API_KEY=${WANDB_API_KEY}
      - WANDB_PROJECT=${WANDB_PROJECT}
      - WANDB_ENTITY=${WANDB_ENTITY:-}
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-}
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      - DOCKER_ENV=1
      - GUNICORN_WORKERS=2
      - GUNICORN_THREADS=4
      - GUNICORN_TIMEOUT=120
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${GPU_COUNT:-0}
              capabilities: [gpu]
    command: >
      bash -c "pip install --no-cache-dir -r requirements.txt &&
      python -c 'import tensorflow as tf; print(\"GPU Available:\", len(tf.config.list_physical_devices(\"GPU\")) > 0)' &&
      gunicorn --bind 0.0.0.0:5000 --workers ${GUNICORN_WORKERS:-2} --threads ${GUNICORN_THREADS:-4} --timeout ${GUNICORN_TIMEOUT:-120} --worker-tmp-dir /tmp app:app"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/models"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - flappy-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=/api
    networks:
      - flappy-network

  mlflow:
    image: python:3.9-slim
    ports:
      - "5001:5000"
    volumes:
      - mlflow_data:/mlflow
    environment:
      - MLFLOW_TRACKING_URI=/mlflow
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=${MLFLOW_DEFAULT_ARTIFACT_ROOT:-/mlflow/artifacts}
    command: >
      bash -c "pip install mlflow==2.10.0 && 
      mlflow server --host 0.0.0.0 --backend-store-uri sqlite:///mlflow/mlflow.db --default-artifact-root /mlflow/artifacts"
    networks:
      - flappy-network

networks:
  flappy-network:
    driver: bridge

volumes:
  mlflow_data:
    driver: local
  tmpfs_data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs 