version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ${USE_GPU:-Dockerfile}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - tmpfs_data:/tmp
    environment:
      - PYTHONUNBUFFERED=1
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - WANDB_API_KEY=${WANDB_API_KEY:-}
      - WANDB_PROJECT=${WANDB_PROJECT:-flappy-bird-rl}
      - WANDB_ENTITY=${WANDB_ENTITY:-}
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-}
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      - DOCKER_ENV=1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${GPU_COUNT:-0}
              capabilities: [gpu]
    command: >
      bash -c "
      echo 'Waiting for MLflow to be ready...' &&
      for i in {1..30}; do
        if curl -s http://mlflow:5000/health >/dev/null; then
          echo 'MLflow is ready!'
          break
        fi
        echo 'Waiting for MLflow... attempt $$i'
        sleep 5
        if [ $$i -eq 30 ]; then
          echo 'Timeout waiting for MLflow'
          exit 1
        fi
      done &&
      python -c 'import tensorflow as tf; print(\"GPU Available:\", len(tf.config.list_physical_devices(\"GPU\")) > 0)' &&
      python app.py"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      mlflow:
        condition: service_healthy
    networks:
      - flappy-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - flappy-network
    restart: unless-stopped

  mlflow:
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - mlflow_data:/mlflow
    networks:
      - flappy-network
    restart: unless-stopped
    mem_limit: 512M

networks:
  flappy-network:
    driver: bridge

volumes:
  mlflow_data:
    driver: local
  tmpfs_data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs 